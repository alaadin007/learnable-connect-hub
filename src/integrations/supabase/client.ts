
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://ldlgckwkdsvrfuymidrr.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxkbGdja3drZHN2cmZ1eW1pZHJyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDYwNTc2NzksImV4cCI6MjA2MTYzMzY3OX0.kItrTMcKThMXuwNDClYNTGkEq-1EVVldq1vFw7ZsKx0";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      autoRefreshToken: true,
      persistSession: true,
      detectSessionInUrl: true,
      flowType: 'pkce', // Use PKCE flow for more security but better compatibility
      debug: process.env.NODE_ENV === 'development', // Enable debug mode in development
    }
  }
);

// Add error handling for supabase operations
supabase.auth.onAuthStateChange((event, session) => {
  if (event === 'SIGNED_OUT') {
    console.log('User signed out');
  } else if (event === 'SIGNED_IN') {
    console.log('User signed in');
  } else if (event === 'TOKEN_REFRESHED') {
    console.log('Token refreshed');
  }
});

// Helper function to detect test accounts
export const isTestAccount = (email: string): boolean => {
  // Used to identify development test accounts which get special handling
  if (!email) return false;
  return email.endsWith('@testschool.edu') || email.endsWith('.test@learnable.edu');
};

// Default test school code - used when creating test accounts
export const TEST_SCHOOL_CODE = 'TESTCODE';

// Helper for type safety with RPC functions
export type TeacherInvitationResult = {
  invitation_id: string;
  school_id: string;
  school_name: string;
  email: string;
}
