
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

// Use environment variables if available, otherwise fall back to defaults
const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL || "http://localhost:8000";
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY || "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      autoRefreshToken: true,
      detectSessionInUrl: true,
      flowType: 'pkce',
      debug: process.env.NODE_ENV === 'development',
    }
  }
);

// Helper function to detect test accounts
export const isTestAccount = (email: string): boolean => {
  // Used to identify development test accounts which get special handling
  if (!email) return false;
  return email.endsWith('@testschool.edu') || email.endsWith('.test@learnable.edu');
};

// Default test school code - used when creating test accounts
export const TEST_SCHOOL_CODE = 'TESTCODE';

// Helper for type safety with RPC functions
export type TeacherInvitationResult = {
  invitation_id: string;
  school_id: string;
  school_name: string;
  email: string;
}

// Export the URL and key for direct access without using the protected properties
export const SUPABASE_PUBLIC_URL = SUPABASE_URL;
export const SUPABASE_PUBLIC_KEY = SUPABASE_PUBLISHABLE_KEY;
